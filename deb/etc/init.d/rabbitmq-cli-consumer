#! /bin/sh
### BEGIN INIT INFO
# Provides:          rabbitmq-cli-consumer
# Required-Start:    networking
# Required-Stop:     networking
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: RabbitMQ CLI Consumer
# Description:       Consumes queues from rabbitmq and executes
#                    command line scripts with message as
#                    argument.
### END INIT INFO

# Using the lsb functions to perform the operations.
. /lib/lsb/init-functions

NAME=rabbitmq-cli-consumer
DAEMON=/usr/bin/$NAME
PIDFILE=/var/run/$NAME.pid
CONFIG=/etc/rabbitmq-cli-consumer.conf
OPTIONS='/bin/echo '

# If the daemon is not there, then exit.
test -x $DAEMON || exit 5

case $1 in
 start)
  if [ -e $PIDFILE ]; then
   status_of_proc -p $PIDFILE $DAEMON "$NAME process" && status="0" || status="$?"
   if [ $status = "0" ]; then
    exit # Exit
   fi
  fi
  log_daemon_msg "Starting the process" "$NAME"
  if start-stop-daemon --start --quiet --oknodo --background --pidfile $PIDFILE --make-pidfile \
        --exec $DAEMON -- --configuration $CONFIG -V --executable $OPTIONS
  then
   log_end_msg 0
  else
   log_end_msg 1
  fi
  ;;
 stop)
  log_daemon_msg "Stopping $NAME"
  start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
  case "$?" in
          0) log_end_msg 0
             if [ -e $PIDFILE ]; then
               rm $PIDFILE
             fi ;;
          1) log_progress_msg "already stopped"
             log_end_msg 0 ;;
          *) log_end_msg 1 ;;
  esac
  ;;
 restart)
  # Restart the daemon.
  $0 stop && sleep 2 && $0 start
  ;;
 status)
  # Check the status of the process.
  if [ -e $PIDFILE ]; then
   status_of_proc -p $PIDFILE $DAEMON "$NAME process" && exit 0 || exit $?
  else
   log_daemon_msg "$NAME process is not running"
   log_end_msg 0
  fi
  ;;
 reload)
  # Reload the process. Basically sending some signal to a daemon to reload
  # it configurations.
  if [ -e $PIDFILE ]; then
   start-stop-daemon --stop --signal USR1 --quiet --pidfile $PIDFILE --name $NAME
   log_success_msg "$NAME process reloaded successfully"
  else
   log_failure_msg "$PIDFILE does not exists"
  fi
  ;;
 *)
  # For invalid arguments, print the usage message.
  echo "Usage: $0 {start|stop|restart|reload|status}"
  exit 2
  ;;
esac
